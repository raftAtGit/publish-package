name: Publish Docker

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: /sample-packages/docker/Dockerfile

env:
  REGISTRY: ghcr.io
  #IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: raftatgit/hello-docker-publish
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: debug
        run: |
          echo "IMAGE_NAME: $IMAGE_NAME"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
      - name: build docker image
        run: docker build -t $REGISTRY/$IMAGE_NAME:$GITHUB_SHA -f sample-packages/docker/Dockerfile .
      - name: docker login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u raftAtGit --password-stdin
      - name: docker push
        run: docker push $REGISTRY/$IMAGE_NAME:$GITHUB_SHA
      - name: Add markdown to summary
        run: |
          echo "### Hello markdown summary world! :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_STEP_SUMMARY
      - name: Add more markdown to summary
        run: |
          echo "## Hello again summary world! :speech_balloon:" >> $GITHUB_STEP_SUMMARY

  token:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - name: debug
      run: 'echo "ACTIONS_ID_TOKEN_REQUEST_URL: $ACTIONS_ID_TOKEN_REQUEST_URL"'
    - name: Install OIDC Client from Core Package
      run: npm install @actions/core@1.10.1 @actions/http-client
    - name: Get Id Token
      uses: actions/github-script@v7
      id: idtoken
      with:
        script: |
          const coredemo = require('@actions/core')
          let id_token = await coredemo.getIDToken()
          coredemo.setOutput('id_token', id_token)   
          console.log(`id_token: ${id_token}`)
  
